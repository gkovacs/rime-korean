# Rime schema
# vim: set sw=2 sts=2 et:
# encoding: utf-8

schema:
  schema_id: korean
  name: 한글 ₀.₉₂
  version: "0.92"
  author:
    - Patrick <ipatrickmac@me.com>
  description: |
    한글입력법 for Rime
    ㄱg ㄴn ㄷd ㄹlr ㅁm ㅂbv ㅅs ㅇqx
    ㅈjz ㅊc ㅋk ㅌt ㅍpf ㅎh
    ㅏaㅐai ㅑia ㅒiai ㅓe ㅔei ㅕie ㅖiei
    ㅗo ㅘoa ㅙoai ㅚoi ㅛio
    ㅜu ㅝue ㅞuei ㅟui ㅠiu
    ㅡy ㅢyi ㅣi

switches:
  - name: half_shape
    states: [ 半角, 全角 ]
    reset: 0

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - r10n_translator
    - echo_translator
    - reverse_lookup_translator
  filters:
    - simplifier
    - uniquifier

speller:
  alphabet: 'zyxwvutsrqponmlkjihgfedcba'
  initials: 'zyxwvutsrqponmlkjihgfedcba'
  delimiter: " '"
  algebra:
    - abbrev/^([gndlmbsqjcktph]).+$/$1/
    - derive/(^|[ '])q?([aeiouy])/$1$2/
    #- derive/q$/ng/
    - derive/q/x/
    - derive/l/r/
    - derive/b/v/
    - derive/p/f/
    - derive/j/z/
    - derive/i/y/
    #- derive/y/w/
    #- derive/oa/wa/
    #- derive/u([ei])/w$1/
    #- derive/ue/wo/
    #- derive/i([aeou])/y$1/
    - derive/^([A-Za-z]+)\d$/$1/

menu:
  alternative_select_keys: "123456789"
  page_size: 9

translator:
  dictionary: korean
  prism: korean
  spelling_hints: 9
  preedit_format:
    - xform/'/ /
    - xform/(^|[ '])([qx])/$1/
    - xform/([qx])/ng/
  comment_format:
    - xform/(^|[ '])q/$1/
    - xform/q/ng/

reverse_lookup:
  dictionary: korean_hanja
  spelling_hints: 10
  prefix: "`"
  tips: 〔漢字・한자〕
  comment_format:
    - xform/(^|[ '])q/$1/
    - xform/q/ng/

punctuator:
  import_preset: default
  full_shape:
    "$" : [ ￦, ￥, "$", "€", "£", "¥", "¢", "¤" ]
  half_shape:
    "$" : [ ₩, "$", "€", "£", "¥", "¢", "¤" ]
    "," : { commit: "," }
    "." : { commit: "." }
    "<" : "<"
    ">" : ">"
    "/" : "/"
    "?" : { commit: "?" }
    ";" : { commit: ";" }
    ":" : { commit: ":" }
    "'" : "'"
    "\"" : "\""
    "\\" : "\\"
    "|" : "|"
    "`" : "`"
    "~" : "~"
    "!" : { commit: "!" }
    "@" : "@"
    "#" : "#"
    "%" : "%"
    "^" : "^"
    "&" : "&"
    "*" : "*"
    "(" : "("
    ")" : ")"
    "-" : "-"
    "_" : "_"
    "+" : "+"
    "=" : "="
    "[" : "["
    "]" : "]"
    "{" : "{"
    "}" : "}"

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*$"

abc_segmentor:
  extra_tags:
    - reverse_lookup

key_binder:
  bindings:
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+n", select: japanese, when: always}
    - {accept: "Control+Shift+N", select: japanese, when: always}
    - {accept: "Control+Shift+k", select: korean, when: always}
    - {accept: "Control+Shift+K", select: korean, when: always}
    - {accept: "Control+Shift+v", select: vietnamese, when: always}
    - {accept: "Control+Shift+V", select: vietnamese, when: always}
    - {accept: "Control+Shift+j", select: double_jyutping_extra, when: always}
    - {accept: "Control+Shift+J", select: double_jyutping_extra, when: always}
    - {accept: "Control+Shift+m", select: td_pinyin_flypy_extra, when: always}
    - {accept: "Control+Shift+M", select: td_pinyin_flypy_extra, when: always}
    - {accept: "Control+Shift+l", select: international, when: always}
    - {accept: "Control+Shift+L", select: international, when: always}
    - {accept: "F16", select: .next, when: always}
    - {accept: "F19", select: international, when: always}
